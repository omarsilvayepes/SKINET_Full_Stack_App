name: dockercompose488082838439662026
services:
  redis:
    image: redis:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    volumes:
    - type: volume
      source: redis-data
      target: /data
      volume: {}
  skinet:
    build:
      context: C:\Users\omary\OneDrive\Escritorio\LearningDEV\SkiNet\Skinet
      dockerfile: Skinet/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Skinet
      target: base
    container_name: Skinet
    entrypoint:
    - dotnet
    - --roll-forward
    - Major
    - /VSTools/DistrolessHelper/DistrolessHelper.dll
    - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: skinet:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages
        --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net9.0/Skinet.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major
        /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\.nuget\packages
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net6.0
      target: /VSTools
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\OneDrive\Escritorio\LearningDEV\SkiNet\Skinet\Skinet
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\AppData\Roaming\ASP.NET\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\AppData\Roaming\Microsoft\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\AppData\Roaming\ASP.NET\Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\AppData\Roaming\Microsoft\UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\omary\OneDrive\Escritorio\LearningDEV\SkiNet\Skinet
      target: /src
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose488082838439662026_default
volumes:
  redis-data:
    name: dockercompose488082838439662026_redis-data